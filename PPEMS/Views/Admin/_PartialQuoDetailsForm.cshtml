@model QuotationDetails
@{
    int n = 0;
}

<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>


<div id="datalist">
    <div class="row">
        <div class="col-sm-12">
            <div class="card-box table-responsive">
                <div class="btn-group dropdown">
                    <button type="button" class="btn btn-success waves-effect waves-light">Export</button>
                    <button type="button" class="btn btn-success dropdown-toggle waves-effect waves-light" data-toggle="dropdown" aria-expanded="false"><i class="caret"></i></button>
                    <div class="dropdown-menu">
                        <a class="dropdown-item" href="@Url.Action("QuoItem","Admin",new {ReportType="PDF",id=Model.QuotationID })">PDF</a>
                        <a class="dropdown-item" href="@Url.Action("QuoItem","Admin",new {ReportType="Excel",id=Model.QuotationID })">Excel</a>
                        <a class="dropdown-item" href="@Url.Action("QuoItem","Admin",new {ReportType="Word",id=Model.QuotationID })">Word</a>
                    </div>
                </div>
                <table id="datatable" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <td>#</td>
                            <td>Unit Value</td>
                            <td>Quantity</td>
                            <td>Unit Cost</td>
                            <td>Quantity Cost</td>
                            <td>Quotation ReferenceNo</td>
                            <td>Quotation Date</td>
                            <td>Project </td>
                        </tr>
                    </thead>

                    <tbody>
                        @if (ViewBag.QuotionList != null)
                        {
                            foreach (var item in ViewBag.QuotionList)
                            {
                                {
                                    n += 1;
                                }
                                <tr id="showData">
                                    <td>@n</td>
                                    <td>@item.Unit</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.UnitCost</td>
                                    <td>@item.QuantityCost</td>
                                    <td>@item.Quotation.ReferenceNo</td>
                                    <td>@item.Quotation.Date.ToString("d")</td>
                                    <td>@item.Quotation.Project.Title</td>

                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="content">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <div class="card-box">
                    <div class="row">
                        <div class="col-sm-12 col-xs-12 col-md-12">
                            <h4 class="header-title m-t-0">Add Item</h4>
                            <div class="p-20">
                                @using (Ajax.BeginForm("QuotationsDetailCreate", "Admin", new AjaxOptions { UpdateTargetId = "datalist", HttpMethod = "POST", InsertionMode = InsertionMode.ReplaceWith }))
                                {

                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model.QuotationID)

                                    <div id="newentry">
                                        <div class="row col-md-12 col-sm-12 col-lg-12">
                                            <div class="form-group col-md-3 col-sm-3">
                                                <label class="col-sm-4 form-control-label">Unit<span class="text-danger">*</span></label>
                                                @Html.TextBoxFor(model => model.Unit, new { @class = "form-control", @required = "required", @placeholder = "Unit", Value = "" })
                                                @Html.ValidationMessageFor(model => model.Unit, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group col-md-3 col-sm-3">
                                                <label class="col-sm-4 form-control-label">Quantity<span class="text-danger">*</span></label>
                                                @Html.TextBoxFor(model => model.Quantity, new { @placeholder = "Quantity", @class = "form-control", @required = "required", Value = "" })
                                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group col-md-3 col-sm-3">
                                                <label class="col-sm-4 form-control-label">Unit Cost<span class="text-danger">*</span></label>
                                                @Html.TextBoxFor(model => model.UnitCost, new { @placeholder = "Unit Cost", @class = "form-control", @required = "required", Value = "" })
                                                @Html.ValidationMessageFor(model => model.UnitCost, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group col-md-3 col-sm-3">
                                                <label class="col-sm-4 form-control-label">Quantity Cost<span class="text-danger">*</span></label>
                                                @Html.TextBoxFor(model => model.QuantityCost, new { @placeholder = "Quantity Cost", @class = "form-control", @required = "required", Value = "" })
                                                @Html.ValidationMessageFor(model => model.QuantityCost, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row col-md-12 col-sm-12 col-lg-12">
                                            <div class="form-group col-md-12">
                                                <label class="col-sm-4 form-control-label">Description<span class="text-danger">*</span></label>
                                                @Html.TextAreaFor(model => model.Description, 3, 6, new { @placeholder = "Description", @class = "form-control", @required = "required", Value = "" })
                                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-sm-8 col-sm-offset-4">
                                            <button type="submit" onclick="QuoCheck();" id="QuoSubmit" class="btn btn-primary waves-effect waves-light">
                                                Create Quotation
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    function QuoCheck() {
        $('#QuoSubmit').submit();
        //(function () {
        //    $('#invoiceform').submit();
        //});
        $('#Unit').val('');
        $('#Quantity').val('');
        $('#UnitCost').val('');
        $('#QuantityCost').val('');
        $('#Description').val('');
    };
</script>


@*<script>
        function Send() {
            var saveData = {
                @Model.Description: $('#Description').val(),
                @Model.Unit: $('#Unit').val(),
                @Model.Quantity: $('#Quantity').val(),
                @Model.UnitCost: $('#UnitCost').val(),
                @Model.QuantityCost: $('#QuantityCost').val(),
                @Model.QuotationID: $('#QuotationID').val(),
            }

            $.ajax({
                url: "@Url.Action("QuotationsDetailCreate", "Admin")",
                type: 'GET',
                data: saveData,
                dataType: 'json',
                success: function (data) {


                    $('#datalist').html(data);



                    //var item='';
                    //$.each(data,function(i,item){
                    //    var rows = "<tr>"
                    //        + "<td>" + i + "</td>"
                    //        + "<td>" + item.Unit + "</td>"
                    //        + "<td>" + item.Quantity + "</td>"
                    //        + "<td>" + item.UnitCost + "</td>"
                    //        + "<td>" + item.QuantityCost + "</td>"
                    //        + "<td>" + item.Quotation.ReferenceNo + "</td>"
                    //        + "<td>" + item.Quotation.Date.ToString("d") + "</td>"
                    //        + "<td>" + item.Quotation.Project.Title + "</td>"
                    //        + "</tr>";
                    //    $('#showData tbody').append(rows);
                    //});



                    //var target = $("#showData");
                    //target.empty();
                    //for (var i = 0; i < data.length; i++) {
                    //    var updateQuotation = data[i];
                    //    //target.append
                    //    $("<tr><td>" + data[i] + "</td><td>"
                    //    + updateQuotation.Unit + "</td><td>"
                    //    + updateQuotation.Quantity + "</td><td>"
                    //    + updateQuotation.UnitCost + "</td><td>"
                    //    + updateQuotation.QuantityCost + "</td><td>"
                    //    + updateQuotation.Quotation.ReferenceNo + "</td><td>"
                    //    + updateQuotation.Quotation.Date.ToString("d") + "</td><td>"
                    //    + updateQuotation.Quotation.Project.Title + "</td></tr>").appendTo('#showData');
                    //}
                },
                error: function (xhr, error) {
                    alert('Try Agail Later')
                }
            });
        };
    </script>*@



